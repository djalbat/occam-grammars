"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    bnfFromNothing: function() {
        return bnfFromNothing;
    },
    entriesFromNothing: function() {
        return entriesFromNothing;
    }
});
var _occamparsers = require("occam-parsers");
var _index = require("../../index");
var rulesAsString = _occamparsers.rulesUtilities.rulesAsString, rulesFromStartRuleAndRuleMap = _occamparsers.rulesUtilities.rulesFromStartRuleAndRuleMap;
var furtleLexerFromNothing = _index.lexersUtilities.furtleLexerFromNothing, furtleParserFromNothing = _index.parsersUtilities.furtleParserFromNothing;
function bnfFromNothing() {
    var furtleParser = furtleParserFromNothing(), startRule = furtleParser.getStartRule(), ruleMap = furtleParser.getRuleMap(), rules = rulesFromStartRuleAndRuleMap(startRule, ruleMap), multiline = true, string = rulesAsString(rules, multiline), bnf = string; ///
    return bnf;
}
function entriesFromNothing() {
    var furtleLexer = furtleLexerFromNothing(), rules = furtleLexer.getRules(), entries = rules.map(function(rule) {
        var entry = rule.asEntry();
        return entry;
    });
    debugger;
    return entries;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leGFtcGxlL3V0aWxpdGllcy9mdXJ0bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHJ1bGVzVXRpbGl0aWVzIH0gZnJvbSBcIm9jY2FtLXBhcnNlcnNcIjtcbmltcG9ydCB7IGxleGVyc1V0aWxpdGllcywgcGFyc2Vyc1V0aWxpdGllcyB9IGZyb20gXCIuLi8uLi9pbmRleFwiO1xuXG5jb25zdCB7IHJ1bGVzQXNTdHJpbmcsIHJ1bGVzRnJvbVN0YXJ0UnVsZUFuZFJ1bGVNYXAgfSA9IHJ1bGVzVXRpbGl0aWVzO1xuXG5jb25zdCB7IGZ1cnRsZUxleGVyRnJvbU5vdGhpbmcgfSA9IGxleGVyc1V0aWxpdGllcyxcbiAgICAgIHsgZnVydGxlUGFyc2VyRnJvbU5vdGhpbmcgfSA9IHBhcnNlcnNVdGlsaXRpZXM7XG5cbmV4cG9ydCBmdW5jdGlvbiBibmZGcm9tTm90aGluZygpIHtcbiAgY29uc3QgZnVydGxlUGFyc2VyID0gZnVydGxlUGFyc2VyRnJvbU5vdGhpbmcoKSxcbiAgICAgICAgc3RhcnRSdWxlID0gZnVydGxlUGFyc2VyLmdldFN0YXJ0UnVsZSgpLFxuICAgICAgICBydWxlTWFwID0gZnVydGxlUGFyc2VyLmdldFJ1bGVNYXAoKSxcbiAgICAgICAgcnVsZXMgPSBydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwKHN0YXJ0UnVsZSwgcnVsZU1hcCksXG4gICAgICAgIG11bHRpbGluZSA9IHRydWUsXG4gICAgICAgIHN0cmluZyA9IHJ1bGVzQXNTdHJpbmcocnVsZXMsIG11bHRpbGluZSksXG4gICAgICAgIGJuZiA9IHN0cmluZzsgLy8vXG5cbiAgcmV0dXJuIGJuZjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVudHJpZXNGcm9tTm90aGluZygpIHtcbiAgY29uc3QgZnVydGxlTGV4ZXIgPSBmdXJ0bGVMZXhlckZyb21Ob3RoaW5nKCksXG4gICAgICAgIHJ1bGVzID0gZnVydGxlTGV4ZXIuZ2V0UnVsZXMoKSxcbiAgICAgICAgZW50cmllcyA9IHJ1bGVzLm1hcCgocnVsZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGVudHJ5ID0gcnVsZS5hc0VudHJ5KCk7XG5cbiAgICAgICAgICByZXR1cm4gZW50cnk7XG4gICAgICAgIH0pO1xuXG4gIGRlYnVnZ2VyXG5cbiAgcmV0dXJuIGVudHJpZXM7XG59XG4iXSwibmFtZXMiOlsiYm5mRnJvbU5vdGhpbmciLCJlbnRyaWVzRnJvbU5vdGhpbmciLCJydWxlc0FzU3RyaW5nIiwicnVsZXNVdGlsaXRpZXMiLCJydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwIiwiZnVydGxlTGV4ZXJGcm9tTm90aGluZyIsImxleGVyc1V0aWxpdGllcyIsImZ1cnRsZVBhcnNlckZyb21Ob3RoaW5nIiwicGFyc2Vyc1V0aWxpdGllcyIsImZ1cnRsZVBhcnNlciIsInN0YXJ0UnVsZSIsImdldFN0YXJ0UnVsZSIsInJ1bGVNYXAiLCJnZXRSdWxlTWFwIiwicnVsZXMiLCJtdWx0aWxpbmUiLCJzdHJpbmciLCJibmYiLCJmdXJ0bGVMZXhlciIsImdldFJ1bGVzIiwiZW50cmllcyIsIm1hcCIsInJ1bGUiLCJlbnRyeSIsImFzRW50cnkiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQVVnQkEsY0FBYztlQUFkQTs7SUFZQUMsa0JBQWtCO2VBQWxCQTs7OzRCQXBCZTtxQkFDbUI7QUFFbEQsSUFBUUMsZ0JBQWdEQyw0QkFBYyxDQUE5REQsZUFBZUUsK0JBQWlDRCw0QkFBYyxDQUEvQ0M7QUFFdkIsSUFBTSxBQUFFQyx5QkFBMkJDLHNCQUFlLENBQTFDRCx3QkFDRixBQUFFRSwwQkFBNEJDLHVCQUFnQixDQUE1Q0Q7QUFFRCxTQUFTUDtJQUNkLElBQU1TLGVBQWVGLDJCQUNmRyxZQUFZRCxhQUFhRSxZQUFZLElBQ3JDQyxVQUFVSCxhQUFhSSxVQUFVLElBQ2pDQyxRQUFRViw2QkFBNkJNLFdBQVdFLFVBQ2hERyxZQUFZLE1BQ1pDLFNBQVNkLGNBQWNZLE9BQU9DLFlBQzlCRSxNQUFNRCxRQUFRLEdBQUc7SUFFdkIsT0FBT0M7QUFDVDtBQUVPLFNBQVNoQjtJQUNkLElBQU1pQixjQUFjYiwwQkFDZFMsUUFBUUksWUFBWUMsUUFBUSxJQUM1QkMsVUFBVU4sTUFBTU8sR0FBRyxDQUFDLFNBQUNDO1FBQ25CLElBQU1DLFFBQVFELEtBQUtFLE9BQU87UUFFMUIsT0FBT0Q7SUFDVDtJQUVOLFFBQVE7SUFFUixPQUFPSDtBQUNUIn0=